{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Stats_item/Stats_item.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","App.js","index.js"],"names":["module","exports","StatsItem","el","key","value","className","styles","label","quantity","Profile","avatar","name","tag","location","stats","profile","description","src","alt","Object","entries","map","Statistics","title","statistics","statList","props","random1","Math","round","random","random2","random3","item","style","backgroundColor","percentage","id","FriendListItem","isOnline","statusClasses","status","active","inactive","join","width","FriendList","items","friends","friendList","App","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b9c8e41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2-qY3\",\"description\":\"Profile_description__18QOx\",\"avatar\":\"Profile_avatar__1GiIb\",\"name\":\"Profile_name__3DyQ6\",\"tag\":\"Profile_tag__8v7S8\",\"location\":\"Profile_location__2ygeY\",\"stats\":\"Profile_stats__3_syJ\",\"label\":\"Profile_label__NB2Ql\",\"quantity\":\"Profile_quantity__2_8Dh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__3fUWX\",\"status\":\"FriendList_status__xbiRE\",\"active\":\"FriendList_active__1vJI9\",\"inactive\":\"FriendList_inactive__3Zxs3\",\"name\":\"FriendList_name__2bd2q\",\"avatar\":\"FriendList_avatar__Etrud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__vs2re\",\"title\":\"Statistics_title__1QVKg\",\"statList\":\"Statistics_statList__bmWDP\",\"item\":\"Statistics_item__1CkPO\",\"label\":\"Statistics_label__14IHx\",\"percentage\":\"Statistics_percentage__3zSlL\"};","import React from 'react-dom';\r\nimport styles from '../Profile.module.css';\r\n\r\nconst StatsItem = ({ el: [key, value] }) => {\r\n  return (\r\n    <li>\r\n      <span className={styles.label}>{key}</span>\r\n      <span className={styles.quantity}>{value}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default StatsItem;\r\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport StatsItem from './Stats_item/Stats_item';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        {Object.entries(stats).map(el => {\r\n          return <StatsItem key={stats[el[0]]} el={el} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: propTypes.string.isRequired,\r\n  name: propTypes.string.isRequired,\r\n  tag: propTypes.string.isRequired,\r\n  location: propTypes.string.isRequired,\r\n  stats: propTypes.oneOfType([propTypes.object, propTypes.array]).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map(props => {\r\n          let random1 = Math.round(Math.random() * 255);\r\n          let random2 = Math.round(Math.random() * 255);\r\n          let random3 = Math.round(Math.random() * 255);\r\n          return (\r\n            <li\r\n              className={styles.item}\r\n              key={props.id}\r\n              style={{\r\n                backgroundColor: `rgb(${random1}, ${random2}, ${random3})`,\r\n              }}\r\n            >\r\n              <span className={styles.label}>{props.label}</span>\r\n              <span className={styles.percentage}>{props.percentage}%</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: propTypes.string,\r\n  stats: propTypes.oneOfType([propTypes.object, propTypes.array]).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react-dom';\r\nimport propTypes from 'prop-types';\r\nimport styles from '../FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const statusClasses = [\r\n    styles.status,\r\n    isOnline ? styles.active : styles.inactive,\r\n  ];\r\n\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={statusClasses.join(' ')}>{isOnline}</span>\r\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: propTypes.string.isRequired,\r\n  name: propTypes.string.isRequired,\r\n  isOnline: propTypes.bool.isRequired,\r\n};\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport styles from './FriendList.module.css';\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\nimport propTypes from 'prop-types';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  const items = friends.map(props => (\r\n    <FriendListItem key={props.id} {...props} />\r\n  ));\r\n  return <ul className={styles.friendList}>{items}</ul>;\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: propTypes.oneOfType([propTypes.object, propTypes.array]).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport Profile from './components/Profile/Profile';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport user from './data/user.json';\r\nimport statistics from './data/statistical-data.json';\r\nimport friends from './data/friends.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statistics} />\r\n      <FriendList friends={friends} />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}